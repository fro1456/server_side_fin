package commands;

import fileManagement.Receiver;

/**
 * класс отвечает за команду help
 */

public class HelpCommand {
    /**
     * метод отвечающий за вывод команды help
     */

    public static String help(){
        Receiver receiver = new Receiver();
//        System.out.println("help : вывести справку по доступным командам\n" +
//                "info : вывести в стандартный поток вывода информацию о коллекции (тип, дата инициализации, количество элементов и т.д.)\n" +
//                "show : вывести в стандартный поток вывода все элементы коллекции в строковом представлении\n" +
//                "insert null {element} : добавить новый элемент с заданным ключом\n" +
//                "update id {element} : обновить значение элемента коллекции, id которого равен заданному\n" +
//                "remove_key null : удалить элемент из коллекции по его ключу\n" +
//                "clear : очистить коллекцию\n" +
//                "save : сохранить коллекцию в файл\n" +
//                "execute_script file_name : считать и исполнить скрипт из указанного файла. В скрипте содержатся команды в таком же виде, в котором их вводит пользователь в интерактивном режиме.\n" +
//                "exit : завершить программу (без сохранения в файл)\n" +
//                "remove_lower {element} : удалить из коллекции все элементы, меньшие, чем заданный\n" +
//                "history : вывести последние 12 команд (без их аргументов)\n" +
//                "replace_if_greater null {element} : заменить значение по ключу, если новое значение больше старого\n" +
//                "average_of_age : вывести среднее значение поля age для всех элементов коллекции\n" +
//                "count_less_than_age age : вывести количество элементов, значение поля age которых меньше заданного\n" +
//                "filter_less_than_age age : вывести элементы, значение поля age которых меньше заданного");
    return("\"help : вывести справку по доступным командам\\n\" +\n" +
            "                \"info : вывести в стандартный поток вывода информацию о коллекции (тип, дата инициализации, количество элементов и т.д.)\\n\" +\n" +
            "                \"show : вывести в стандартный поток вывода все элементы коллекции в строковом представлении\\n\" +\n" +
            "                \"insert null {element} : добавить новый элемент с заданным ключом\\n\" +\n" +
            "                \"update id {element} : обновить значение элемента коллекции, id которого равен заданному\\n\" +\n" +
            "                \"remove_key null : удалить элемент из коллекции по его ключу\\n\" +\n" +
            "                \"clear : очистить коллекцию\\n\" +\n" +
            "                \"save : сохранить коллекцию в файл\\n\" +\n" +
            "                \"execute_script file_name : считать и исполнить скрипт из указанного файла. В скрипте содержатся команды в таком же виде, в котором их вводит пользователь в интерактивном режиме.\\n\" +\n" +
            "                \"exit : завершить программу (без сохранения в файл)\\n\" +\n" +
            "                \"remove_lower {element} : удалить из коллекции все элементы, меньшие, чем заданный\\n\" +\n" +
            "                \"history : вывести последние 12 команд (без их аргументов)\\n\" +\n" +
            "                \"replace_if_greater null {element} : заменить значение по ключу, если новое значение больше старого\\n\" +\n" +
            "                \"average_of_age : вывести среднее значение поля age для всех элементов коллекции\\n\" +\n" +
            "                \"count_less_than_age age : вывести количество элементов, значение поля age которых меньше заданного\\n\" +\n" +
            "                \"filter_less_than_age age : вывести элементы, значение поля age которых меньше заданного\"");
    }
}
